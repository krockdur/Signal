local config = require("main.defines")

function init(self)

	-- 0 40 80 120 160 200 240 280 320 360 400 440 480 520 560 600
	
	self.pos = vmath.vector3(0, 800, 0)

	self.spawn_enemies = {}
	
end

function final(self)

end

function update(self, dt)

end

local time_to_pop = 0
function fixed_update(self, dt)
	--print(go.get("/enemies/enemy_red#sprite_red", "size"))
	time_to_pop = time_to_pop + dt
	if(time_to_pop > config.TIME_BETWEEN_POP) then
		-- pop an enemy
		local pos_on_grid = math.random(0, 15)
		self.pos.x = pos_on_grid * config.ENEMY_WIDTH + config.ENEMY_WIDTH / 2

		local type_enemy = math.random(1, 4)
		if (type_enemy == 1) then
			table.insert(self.spawn_enemies, factory.create("#factory_enemy_yellow", self.pos, nil, { who = config.TYPE_ENEMY_YELLOW }, nil))
		end
		if (type_enemy == 2) then
			table.insert(self.spawn_enemies, factory.create("#factory_enemy_green", self.pos, nil, { who = config.TYPE_ENEMY_GREEN }, nil))
		end
		if (type_enemy == 3) then
			table.insert(self.spawn_enemies, factory.create("#factory_enemy_white", self.pos, nil, { who = config.TYPE_ENEMY_WHITE }, nil))
		end
		if (type_enemy == 4) then
			table.insert(self.spawn_enemies, factory.create("#factory_enemy_red", self.pos, nil,  { who = config.TYPE_ENEMY_RED }, nil))
		end
	
		time_to_pop = 0
	end
	
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("bomb")) then
		--for _, enemy_id in ipairs(self.spawn_enemies) do	
		go.delete(self.spawn_enemies)			
		--end
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)

end
